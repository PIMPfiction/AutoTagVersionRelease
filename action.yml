name: 'AutoTagVersionRelease'
author: 'PIMPfiction'
description: 'Generates auto tags and releases current tag. It can be used in custom developed golang packages for versioning.'
inputs:
  github-token:
    required: true
    description: 'Github token is needed for creating release'
runs:
  using: composite
  steps: 
  - uses: phish108/autotag-action@1.1.51
    with:
      github-token: ${{ inputs.github-token }}
  - uses: actions/checkout@v3
    with:
      fetch-depth: 0
  - name: "Fetch Tags"
    shell: bash
    run: |
      git fetch -t && tag=$(echo $(git tag -l| sort -V | tail -n1 )) && echo TAG=$(echo $tag) >> $GITHUB_ENV
  - uses: "actions/github-script@v6"
    with:
      github-token: '${{ inputs.github-token }}'
      script: |
        try {
          await github.rest.repos.createRelease({
            draft: false,
            generate_release_notes: false,
            name: process.env.TAG,
            owner: context.repo.owner,
            prerelease: false,
            repo: context.repo.repo,
            tag_name: process.env.TAG,
          });

        } catch (error) {
          core.setFailed(error.message);}


